name: Publish MAUI iOS App

on:
  push:
    tags:
      - "v-phone-*"
      - "v-ios-*"
      - "v-android-*"
  workflow_dispatch:

jobs:
  build-react:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
      display_version: ${{ steps.get_version.outputs.DISPLAY_VERSION }}
      build_version: ${{ steps.get_version.outputs.BUILD_VERSION }}
    steps:
      - name: Get version
        id: get_version
        run: |
          # Strip v prefix: v-phone-1.0.1 -> 1.0.1, v-ios-1.0.1 -> 1.0.1, v-android-1.0.1 -> 1.0.1
          if [[ "${GITHUB_REF}" == refs/tags/v-phone-* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v-phone-}
          elif [[ "${GITHUB_REF}" == refs/tags/v-ios-* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v-ios-}
          elif [[ "${GITHUB_REF}" == refs/tags/v-android-* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v-android-}
          else
            echo "Unsupported tag format"
            exit 1
          fi

          # Convert to build number: 1.0.1 -> 1000001
          BUILD_VERSION=$(echo $VERSION | sed -e 's/\./ /g' | xargs printf "%d%03d%03d")
          # Keep original tag: v1.0.1
          DISPLAY_VERSION=${GITHUB_REF#refs/tags/}

          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_OUTPUT
          echo "DISPLAY_VERSION=$DISPLAY_VERSION" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Setup .env.production
        run: |
          cat > ./src/AINarrativePainting.React/.env.production << EOL
          VITE_SUPABASE_ENDPOINT=${{ secrets.VITE_SUPABASE_ENDPOINT }}
          VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_VERSION=${{ steps.get_version.outputs.VERSION }}
          EOL

      # build workspace ./src/AINarrativePainting.React
      - name: Install dependencies
        run: |
          npm install
          npm run build
        working-directory: src/AINarrativePainting.React
        env:
          APP_VERSION: ${{ steps.get_version.outputs.VERSION }}

      # copy dist to artifact
      - uses: actions/upload-artifact@v3.0.0
        with:
          name: react-build
          path: src/AINarrativePainting.React/dist

  build-ios:
    needs: build-react
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/v-phone-') || startsWith(github.ref, 'refs/tags/v-ios-')
    steps:
      # copy react build to maui project
      - name: Checkout code
        uses: actions/checkout@v3

      # download artifact from previous step and copy to maui project
      - uses: actions/download-artifact@v3.0.0
        with:
          name: react-build
          path: src/AINarrativePainting.App/Resources/Raw/wwwroot

      - name: list files
        run: |
          ls -la src/AINarrativePainting.App/Resources/Raw/wwwroot

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

      - name: Install MAUI Workload
        run: |
          dotnet workload install maui
          dotnet workload install ios

      - name: Install Apple Certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12_BASE64 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}

      - name: Install Provisioning Profile
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: "art.aishuohua.app"
          # profile-type: "IOS_APP_STORE"
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

      - name: Build MAUI iOS
        run: |
          dotnet publish src/AINarrativePainting.App/AINarrativePainting.App.csproj \
          -f net9.0-ios -c Release \
          /p:ApplicationVersion=$APP_VERSION \
          /p:ApplicationDisplayVersion=$APP_DISPLAY_VERSION \
          /p:ArchiveOnBuild=true \
          /p:RuntimeIdentifier=ios-arm64 \
          /p:CodesignKey="${{ secrets.APPLE_SIGNING_IDENTITY }}" \
          /p:CodesignProvision="${{ secrets.APPLE_PROVISIONING_PROFILE_NAME }}"
        env:
          APP_VERSION: ${{ needs.build-react.outputs.build_version }}
          APP_DISPLAY_VERSION: ${{ needs.build-react.outputs.version }}

      - name: Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: "src/AINarrativePainting.App/bin/Release/net9.0-ios/ios-arm64/publish/AINarrativePainting.App.ipa"
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: ios-build
          path: "src/AINarrativePainting.App/bin/Release/net9.0-ios/ios-arm64/publish/*.ipa"

  build-android:
    needs: build-react
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/v-phone-') || startsWith(github.ref, 'refs/tags/v-android-')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Retrieve the secret and decode it to a file
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > src/AINarrativePainting.App/keystore.jks

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - name: Install MAUI Workload
        run: |
          dotnet workload install maui
          dotnet workload install android
          ls -lha src/AINarrativePainting.App

      - name: Build MAUI Android
        run: |
          dotnet publish src/AINarrativePainting.App/AINarrativePainting.App.csproj -f net9.0-android -c Release /p:AndroidKeyStore=true /p:AndroidSigningKeyStore=keystore.jks /p:AndroidSigningKeyAlias="${{ secrets.KEY_ALIAS }}" /p:AndroidSigningKeyPass="${{ secrets.KEYSTORE_PASSWORD }}" /p:AndroidSigningStorePass="${{ secrets.KEYSTORE_PASSWORD }}" /p:ApplicationVersion=$APP_VERSION /p:ApplicationDisplayVersion=$APP_DISPLAY_VERSION
        env:
          APP_VERSION: ${{ needs.build-react.outputs.build_version }}
          APP_DISPLAY_VERSION: ${{ needs.build-react.outputs.version }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: android-build
          path: "src/AINarrativePainting.App/bin/Release/net9.0-android/publish/*Signed.a*"
